<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AK6GSgDivpgAhUgAAPbgyQDBonYAl2MrAPrv5ADrzq8Ak1wPAMKVXQDWr4IApXg4AOXV
        wQDZxqsAzrWTANGndQDw5dcAu4xRAKJuKAD+9/EAx6qCAJlmHQCyfz4AyZ9rAI1TAQDUvJ0A5selAOrc
        ywC2kV4AvZxtAMywigCodC8AjVQPAO/awwCZYRUAvJZkAP3s3ADdyrIA2rSIAKBwMAD48+sA+OTQAPTr
        4AC/kFcA6+HSAP77+ACbaisAnGojAKh8PgD/8+kAiU4AAM2jcgCPVgYAlF4WALCITwCRWQsAxJhhAKFr
        IgC4lGIA+/XuAPThzQCebCcA/vHkAP3u4AD27eQAl2IdANKvhADRqXkA+/j0AJ9vKwD/9u0A+/LoAJBY
        DwD049EA//77AJZeEQCWYRgAsoZLANC3lgDYsoUAy6FuAP/59ADv49QA59vJAOTTvgDnyagAzbOQAIdL
        AACXZBoAx6yFAPv06wDOpnUAi1EAAI9XCgD47uIA7eDQAP38+wD47+YAnWwrAP369gD89vAA/vTrAPvw
        5gD3484A28esAP7+/QCTWg4A//v2AP348wD/+fEA//fvAPzy6wCleToA9eDLAK6HTwDLoGwAi1ECAPjv
        5ADr4NAAwaJ4AP/8+QD89/IA/PTtAP7y6AD68ecAp3s9AIZJAACITAAAik8AAIxSAACQVgUAj1cPAP/+
        /gCSWw8AklwQAP/9/AD+/fsAll0QAP/9+gD+/PoA//z3AP769wD/+vUA/vn1AP/68wD9+fQA//jzAJpp
        KwD99/AA/vbwAJxrKwD99u8Anm0rAP727gD89e8A//XrAPzz7ACocy4A+fPsAKdzLwD88+oA+vLpAPvx
        6QD88egA/fDkAPnv4wCygD8A9evfANexhQCGSAAAh0oAAIdMAACITQAAiU8AAIpQAACLUAAAi1EBAI1V
        DwCTWg8All4QAJReFQD///4A//79AP/+/AD+/fwA/vv5AP/79wD9+vcA//v1AP769QD/+fMAm2krAP34
        9AD/+fIAnWsrAP748wD/+PIAn24rAP348gD/+PEA/vjxAKBvMAD/9/AA/PfxAPz28QD89/AA/fbwAP/2
        7wD+9u8A/PbvAPv17wD89e4A+/TuAPvz7AD78+sA+/LpAPry6AD68egA+vDmAPnu4gCvh08Av5BWAM2k
        cgDdyrEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADUdHR8eYwZhkZMeaZGSYlTCax0dHR0dHR0dHR0dHRzg2g6+uhDsYC+BdAwxSNd+oIbWxga2C
        g4ODg4ODg4ODMYevJDpXPkBIzMzScNFnpkFpCaotIYs0rl6Dg4ODg4NHtBkjbbyT2NnV02ZmnJzYSc+W
        0jMrHHWfGq2Cg4ODg0dEyrl+226NAQEBAQEBAQG6L5Nc13yXnXNRE2ytXoODRwHOpy8BAQEBAQEBAQEB
        AQEBAQEBvdTa08YmKKGDgoNHwt23AQEBAQEBAQEBAQEBAQEBAQEBAbd72z3ABRFNsEdgigEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBzdyRfUVex9wBAQEBAQEBAQEBAYODAQEBAQEBAQEBg4MBuqQvqRTEZgEBAQEB
        AQEBAQEBg4MBAQEBAQEBYmuDgwEBAZyMVE/PAQEBAQEBAQEBAQGDgwEBAQEBAQEBAYODAQEBAZ4BS34B
        AQEBAbcBAQEBAYODAQEBAQEBAQEBg4MBAQEBuNa3igEBAQEBAQEBAQEBg4MBAQEBAQEBAQGDgwEBAQEB
        hgEBg4MBAQEBg4MBAQGDg4ODg4ODgwEBAYODg4ODg4ODAQGDgwEBAQGDgwEBAQEBAQEBAYODAQEBAQEB
        AQEBg4MBAYODAQEBAYODAQEBAQEBAQEBg4MBAQEBAQEBAQGDgwEBg4ODg4ODg4MBAQEBAQEBAQGDgwEB
        AQEBAQEBAYODAQGDg4ODg4ODgwEBAYODAQEBAYODAQEBg4MBAQEBg4MBAYODAQEBAYODAQEBg4MBAQEB
        g4MBAQGDgwEBAQGDgwG4g4MBAQEBg4MBAQGDgwEBAQGDgwEBAYODAQEBAYODuLgBg4ODg4ODAQEBAYOD
        g4ODg4MBAQEBg4ODg4ODg926L0YBAQEBAQEBAQEBAbcBAQEBAQEBAQEBAQEBAQG5pwEslAEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAZyZvxZMcQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQGKCC4lQw/GewEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBimgBAgeFX1VnjQEBAQEBAQEBAQEBAQEBAQEBAQEBAbulTCB2xwqs
        cqCiigEBAQEBAQEBAQEBAQEBAQEBAQHISEI8gbFHCoOr3iqbZQEBAQEBAQEBAQEBAQEBAQG70hXhy4Be
        g0cKg4MEMnhv0LoBAQEBAQEBAQEBAQGNyskdHrJZg4ODRwqDg4OANxBjksUvuAEBAQEBAYmPxsMSeYiA
        sYODg4NHOYODg4M0rClYYaN6bVOQkFOOvncOH06rgoODg4ODgz8XCgoKCgoKhbNadFsbJw5WalAGf7Yi
        SgoKCgoKCgoKDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>